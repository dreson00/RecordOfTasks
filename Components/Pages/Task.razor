@page "/task/{id:int}"
@inject DatabaseService Db;
@inject NavigationManager Navigation;
@inject Microsoft.AspNetCore.Components.NavigationManager NavManager

<PageTitle>Task</PageTitle>

<h3>Úkol</h3>

@if (taskItem == null)
{
    <p>Načítám...</p>
}
else
{
    @if (editTaskItem == null)
    {
        <table class="table mb-5">
            <thead>
                <tr>
                    <th>Firma</th>
                    <th>Popis</th>
                    <th>Zadavatel</th>
                    <th>Řešitel</th>
                    <th>Datum nahlášení</th>
                    <th>Stav</th>
                    <th>Priorita</th>
                    <th>Termín dokončení</th>
                    <th>Akce</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@taskItem.Company</td>
                    <td>@taskItem.Description</td>
                    <td>@taskItem.Creator</td>
                    <td>@taskItem.Assignee</td>
                    <td>@taskItem.ReportedDate.ToString("d")</td>
                    <td>@taskItem.Status</td>
                    <td>@taskItem.Priority</td>
                    <td>@taskItem.DueDate.ToString("d")</td>
                    <td>
                        <button @onclick="() => editTaskItem = taskItem" class="btn btn-outline-secondary bi bi-pencil-fill"></button>
                        <button @onclick="() => deletedTaskItem = taskItem" class="btn btn-outline-danger bi bi-trash3-fill"></button>
                    </td>
                </tr>
            </tbody>
        </table>
    }
    else
    {
        <table class="table mb-5">
            <thead>
                <tr>
                    <th>Firma</th>
                    <th>Popis</th>
                    <th>Zadavatel</th>
                    <th>Řešitel</th>
                    <th>Stav</th>
                    <th>Priorita</th>
                    <th>Termín dokončení</th>
                    <th>Akce</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <input id="Company" @bind="taskItem.Company" class="form-control" />
                    </td>
                    <td>
                        <input id="Description" @bind="taskItem.Description" class="form-control" />
                    </td>
                    <td>
                        <input id="Creator" @bind="taskItem.Creator" class="form-control" />
                    </td>
                    <td>
                        <input id="Assignee" @bind="taskItem.Assignee" class="form-control" />
                    </td>
                    <td>
                        <select id="Priority" @bind="taskItem.Priority" class="form-control">
                            <option value="Nízká">Nízká</option>
                            <option value="Střední">Střední</option>
                            <option value="Vysoká">Vysoká</option>
                        </select>
                    </td>
                    <td>
                        <input id="DueDate" type="date" @bind="taskItem.DueDate" class="form-control" />
                    </td>
                    <td>
                        <select id="Status" @bind="taskItem.Status" class="form-control">
                            <option value="Nový">Nový</option>
                            <option value="Probíhá">Probíhá</option>
                            <option value="Dokončen">Dokončen</option>
                        </select>
                    </td>
                    <td>
                        <button @onclick="() => EditTaskItemAsync()" class="btn btn-outline-primary bi bi-floppy-fill"></button>
                    </td>
                </tr>
            </tbody>
        </table>
    }


    <h3>Checklist</h3>
    if (editChecklistItem == null)
    {
        <table class="table mb-5">
            <thead>
                <tr>
                    <th>Popis</th>
                    <th>Dokončen</th>
                    <th>Termín dokončení</th>
                    <th>Akce</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var checklistItem in checklistItems)
                {
                    <tr>
                        <td>@checklistItem.Description</td>
                        <td>
                            <input type="checkbox" checked="@checklistItem.IsCompleted" disabled />
                        </td>
                        <td>@checklistItem.DueDate.ToString("d")</td>
                        <td>
                            <button @onclick="() => editChecklistItem = checklistItem" class="btn btn-outline-secondary bi bi-pencil-fill"></button>
                            <button @onclick="() => deletedChecklistItem = checklistItem" class="btn btn-outline-danger bi bi-trash3-fill"></button>
                        </td>
                    </tr>
                }
                <tr>

                    <td>
                        <input id="description" @bind="newChecklistItem.Description" class="form-control" />
                    </td>
                    <td>
                        <input id="IsCompleted" type="checkbox" @bind="newChecklistItem.IsCompleted" class="text-center" />
                    </td>
                    <td>
                        <input id="dueDate" type="date" @bind="newChecklistItem.DueDate" class="form-control" />
                    </td>
                    <td>
                        <button @onclick="() => CreateChecklistItemAsync()" class="btn btn-outline-primary bi bi-floppy-fill"></button>
                    </td>
                </tr>
            </tbody>
        </table>
    }
    else
    {
        <table class="table mb-5">
            <thead>
                <tr>
                    <th>Popis</th>
                    <th>Dokončen</th>
                    <th>Termín dokončení</th>
                    <th>Akce</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <input id="description" @bind="editChecklistItem.Description" class="form-control" />
                    </td>
                    <td>
                        <input id="IsCompleted" type="checkbox" @bind="editChecklistItem.IsCompleted" class="text-center" />
                    </td>
                    <td>
                        <input id="dueDate" type="date" @bind="editChecklistItem.DueDate" class="form-control" />
                    </td>
                    <td>
                        <button @onclick="() => EditChecklistItemAsync()" class="btn btn-outline-primary bi bi-floppy-fill"></button>
                    </td>
                </tr>
            </tbody>
        </table>
    }
    <h3>Zprávy</h3>
    if (editMessage == null)
    {
        @foreach (var message in messages)
        {
            <div class="row">
                <div class="col-10 border">
                    <p class="small">@message.Timestamp</p>
                    <p>@message.MessageText</p>
                    <p>@message.NameUser </p>
                </div>
                <div class="col-2 my-5">
                    <button @onclick="() => editMessage = message" class="btn btn-outline-secondary bi bi-pencil-fill"></button>
                    <button @onclick="() => deletedMessage = message" class="btn btn-outline-danger bi bi-trash3-fill"></button>
                </div>
            </div>
        }
        <div class="row">
            <div class="col">
                <label for="messageText">Nová zpráva</label>
                <textarea id="messageText" @bind="newMessage.MessageText" class="form-control" />
            </div>
        </div>
        <div class="row">
            <div class="col-2">
                <label for="nameUser">Uživatel</label>
                <input id="nameUser" @bind="newMessage.NameUser" class="form-control" />
            </div>
            <div class="col-2">
                <br />
                <button @onclick="() => CreateMessageAsync()" class="btn btn-outline-primary bi bi-floppy-fill"></button>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col">
                <label for="messageText">Zpráva</label>
                <textarea id="messageText" @bind="editMessage.MessageText" class="form-control" />
            </div>
        </div>
        <div class="row">
            <div class="col-2">
                <label for="nameUser">Uživatel</label>
                <input id="nameUser" @bind="editMessage.NameUser" class="form-control" />
            </div>
            <div class="col-2">
                <br />
                <button @onclick="() => EditMessageAsync()" class="btn btn-outline-primary bi bi-floppy-fill"></button>
            </div>
        </div>
    }
}

@if (deletedTaskItem != null || deletedMessage != null || deletedChecklistItem != null)
{
    <div class="modal d-block" tabindex="-1" style="display: block;" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Potvrzení</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Opravdu chcete tento záznam smazat?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseModal">Zrušit</button>
                    @if (deletedChecklistItem != null)
                    {
                        <button type="button" class="btn btn-danger" @onclick="() => DeleteChecklistItemAsync()">Smazat</button>
                    }
                    else if (deletedMessage != null)
                    {
                        <button type="button" class="btn btn-danger" @onclick="() => DeleteMessageAsync()">Smazat</button>

                    }
                    else
                    {
                        <button type="button" class="btn btn-danger" @onclick="() => DeleteTaskItemAsync()">Smazat</button>
                    }
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int id { get; set; }
    public string edit { get; set; }

    private TaskItem taskItem;
    private List<ChecklistItem> checklistItems;
    private List<Message> messages;

    private TaskItem deletedTaskItem;
    private ChecklistItem deletedChecklistItem;
    private Message deletedMessage;

    private TaskItem editTaskItem;
    private Message editMessage;
    private ChecklistItem editChecklistItem;

    private Message newMessage = new Message();
    private ChecklistItem newChecklistItem = new ChecklistItem()
        {
            DueDate = DateTime.Today
        };

    protected override async void OnInitialized()
    {
        taskItem = await Db.GetTaskItemByIdAsync(id);
        messages = await Db.GetMessagesByTaskIdAsync(id);
        checklistItems = await Db.GetChecklistItemsByTaskIdAsync(id);

        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("edit", out var edit) && edit == "true")
             editTaskItem = taskItem;
    }

    private async void CreateMessageAsync()
    {
        if (!string.IsNullOrWhiteSpace(newMessage.MessageText) && !string.IsNullOrWhiteSpace(newMessage.NameUser))
        {
            newMessage.Timestamp = DateTime.Now;
            newMessage.TaskId = id;

            messages.Add(newMessage);
            await Db.CreateMessageAsync(newMessage);

            newMessage = new Message();
        }
    }
    private async void CreateChecklistItemAsync()
    {
        if (!string.IsNullOrWhiteSpace(newChecklistItem.Description))
        {
            newChecklistItem.TaskId = id;

            checklistItems.Add(newChecklistItem);
            Db.CreateChecklistItemAsync(newChecklistItem);

            newChecklistItem = new ChecklistItem()
                {
                    IsCompleted = false,
                    DueDate = DateTime.Today
                };
        }
    }
    private void CloseModal()
    {
        deletedTaskItem = null;
        deletedChecklistItem = null;
        deletedMessage = null;
    }
    private async void DeleteTaskItemAsync()
    {
        await Db.DeleteTaskItemAsync(deletedTaskItem.Id);
        deletedTaskItem = null;
        Navigation.NavigateTo("/");
    }
    private async void EditTaskItemAsync()
    {
        await Db.EditTaskItemAsync(taskItem);
        taskItem = await Db.GetTaskItemByIdAsync(id);
        editTaskItem = null;
    }
    private async void EditMessageAsync()
    {
        if (!string.IsNullOrWhiteSpace(editMessage.MessageText) && !string.IsNullOrWhiteSpace(editMessage.NameUser))
        {
            editMessage.Timestamp = DateTime.Now;
            await Db.EditMessageAsync(editMessage);
            messages = await Db.GetMessagesByTaskIdAsync(id);
            editMessage = null;
        }
    }
    private async void EditChecklistItemAsync()
    {
        if (!string.IsNullOrWhiteSpace(editChecklistItem.Description))
        {
            await Db.EditChecklistItemAsync(editChecklistItem);
            checklistItems = await Db.GetChecklistItemsByTaskIdAsync(id);
            editChecklistItem = null;
        }
    }
    private async void DeleteMessageAsync()
    {
        await Db.DeleteMessageByIdAsync(deletedMessage.Id);
        messages = await Db.GetMessagesByTaskIdAsync(id);
        deletedMessage = null;
    }
    private async void DeleteChecklistItemAsync()
    {
        await Db.DeleteChecklistItemByIdAsync(deletedChecklistItem.Id);
        checklistItems = await Db.GetChecklistItemsByTaskIdAsync(id);
        deletedChecklistItem = null;
    }
}
