@inject DatabaseService Db;
@inject NavigationManager Navigation;

@page "/"

<PageTitle>Nový úkol</PageTitle>

<h3>Nový úkol</h3>
<table class="table">
    <thead>
        <tr>
            <th>Firma</th>
            <th>Popis</th>
            <th>Zadavatel</th>
            <th>Řešitel</th>
            <th>Stav</th>
            <th>Priorita</th>
            <th>Termín vyřešení</th>
            <th>Akce</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                <input id="Company" @bind="newTaskItem.Company" class="form-control" />
            </td>
            <td>
                <input id="Description" @bind="newTaskItem.Description" class="form-control" />
            </td>
            <td>
                <input id="Creator" @bind="newTaskItem.Creator" class="form-control" />
            </td>
            <td>
                <input id="Assignee" @bind="newTaskItem.Assignee" class="form-control" />
            </td>
            <td>
                <select id="Status" @bind="newTaskItem.Status" class="form-control">
                    <option value="Nový">Nový</option>
                    <option value="Probíhá">Probíhá</option>
                    <option value="Dokončen">Dokončen</option>
                </select>
            </td>
            <td>
                <select id="Priority" @bind="newTaskItem.Priority" class="form-control">
                    <option value="Nízká">Nízká</option>
                    <option value="Střední">Střední</option>
                    <option value="Vysoká">Vysoká</option>
                </select>
            </td>
            <td>
                <input id="DueDate" type="date" @bind="newTaskItem.DueDate" class="form-control" />
            </td>
            <td>
                <button @onclick="() => CreateTaskItemAsync()" class="btn btn-outline-primary bi bi-floppy-fill"></button>
            </td>
        </tr>
    </tbody>
</table>

@if (saved)
{
    <h2 class="my-2">Úkol je uložen.</h2>
}
<h3>Poslední úkol</h3>

<table class="table">
    <thead>
        <tr>
            <th>Firma</th>
            <th>Popis</th>
            <th>Zadavatel</th>
            <th>Řešitel</th>
            <th>Termín nahlášení</th>
            <th>Stav</th>
            <th>Priorita</th>
            <th>Termín vyřešení</th>
            <th>Akce</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@lastTaskItem.Company</td>
            <td>@lastTaskItem.Description</td>
            <td>@lastTaskItem.Creator</td>
            <td>@lastTaskItem.Assignee</td>
            <td>@lastTaskItem.ReportedDate.ToString("d")</td>
            <td>@lastTaskItem.Status</td>
            <td>@lastTaskItem.Priority</td>
            <td>@lastTaskItem.DueDate.ToString("d")</td>
            <td>
                <a href="task/@lastTaskItem.Id" class="btn btn-outline-success bi bi-search"></a>
                <a href="task/@(lastTaskItem.Id)?edit=true" class="btn btn-outline-secondary bi bi-pencil-fill"></a>
                <button @onclick="() => deletedTaskITem = lastTaskItem" class="btn btn-outline-danger bi bi-trash3-fill"></button>
            </td>
        </tr>
    </tbody>
</table>

@if (deletedTaskITem != null)
{
    <div class="modal d-block" tabindex="-1" style="display: block;" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Potvrzení</h5>
                    <button type="button" class="btn-close" @onclick="() => deletedTaskITem = null" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Opravdu chcete tento záznam smazat?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="() => deletedTaskITem = null">Zrušit</button>
                    <button type="button" class="btn btn-danger" @onclick="() => DeleteTaskItemAsync()">Smazat</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    // Private fieldy začínají podtržítkem.
    private bool saved = false;
    private TaskItem deletedTaskITem;
    private TaskItem newTaskItem = new TaskItem()
        {
            DueDate = DateTime.Today,
            Status = "Nový",
            Priority = "Nízká"
        };
    private TaskItem lastTaskItem;

    protected async override void OnInitialized()
    {
        lastTaskItem = await Db.GetLastTaskItemAsync();
    }

    // Proč všechny async metody tady vrací void?
    // Co by se teda třeba stalo kdybych kliknul na tlačítko Uložit a pak rychle ještě jednou dřív než by se předchozí uložení stihlo dokončit?
    private async void CreateTaskItemAsync()
    {
        saved = false;
        // Špatná čitelnost. Moc dlouhé na jeden řádek.
        if (!string.IsNullOrWhiteSpace(newTaskItem.Company) && !string.IsNullOrWhiteSpace(newTaskItem.Description) && !string.IsNullOrWhiteSpace(newTaskItem.Creator) && !string.IsNullOrWhiteSpace(newTaskItem.Assignee) && !string.IsNullOrWhiteSpace(newTaskItem.Priority) && !string.IsNullOrWhiteSpace(newTaskItem.Status))
        {
            newTaskItem.ReportedDate = DateTime.Today;

            // Neměla by se odsud přímo volat DB, ale měla by existovat business vrstva, která by to od sebe oddělovala.
            // Proč nečekáme na tuhle metodu přes await? Co všechno pak může být v lastTaskItem?
            Db.CreateTaskItemAsync(newTaskItem);

            // Nedal by se tenhle výchozí TaskItem vytvářet efektivněji? Vidím 2x úplně stejný kód.
            newTaskItem = new TaskItem()
                {
                    DueDate = DateTime.Today,
                    // Proč je to tu natvrdo napsáno česky ve stringu?
                    Status = "Nový",
                    Priority = "Nízká"
                };
            saved = true;

            // K čemu se na stránce vůbec zobrazuje poslední přidaný task?
            lastTaskItem = await Db.GetLastTaskItemAsync();
        }
    }
    private async void DeleteTaskItemAsync()
    {

        await Db.DeleteTaskItemAsync(deletedTaskITem.Id);
        lastTaskItem = await Db.GetLastTaskItemAsync();
        deletedTaskITem = null;
    }
}

